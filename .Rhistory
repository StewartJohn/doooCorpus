dooo_fac_stud[academic_year]
dooo_fac_stud[academic_year,]
dooo_fac_stud[,academic_year]
dooo_fac_stud[,'academic_year']
parameter = 'academic_year'
dooo_fac_stud[,parameter]
runApp()
?barplot
runApp()
## show new user registrations by academic year, grouped by faculty/student status
counts <- table(dooo_fac_stud[dooo_fac_stud$status == 'Student',]$academic_year,
dooo_fac_stud[dooo_fac_stud$status == 'Faculty/Staff',]$academic_year,
dooo_fac_stud[is.na(dooo_fac_stud$status),]$academic_year)
barplot(counts, main = 'New DoOO registrations per academic year',
xlab='academic year', col = c('blue', 'purple', 'red'), legend = c('students', 'faculty/staff', 'unknown'))
runApp()
install.packages('rsconnect')
rsconnect::setAccountInfo(name='kshaffer', token='D038CAE98EA9E373091583ADAAA30096', secret='DPSuVgFPtlCJogaKMGhxH24dgmBvCd2g2+ltYJr5')
library(rsconnect)
rsconnect::deployApp('./')
getwd()
setwd('..')
rsconnect::deployApp('UMWDomains/')
shiny::runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
shiny::runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
runApp('UMWDomains')
?lm
??multivariate
shiny::runApp('UMWDomains')
last_year <- dooo_fac_stud[dooo_fac_stud$date > '2015-10-31',]$date
last_year <- dooo_fac_stud[dooo_fac_stud$date > as.char('2015-10-31'),]$date
last_year <- dooo_fac_stud[dooo_fac_stud$date > as.character('2015-10-31'),]$date
in2016 <- dooo_fac_stud['2016' %in% dooo_fac_stud$date,]$date
summary(in2016)
head(in2016)
in2016 <- dooo_fac_stud['2016' %in% dooo_fac_stud$date,]
summary(in2016)
length(in2016)
length(in2016$date)
summary(dooo_fac_stud)
length(dooo_fac_stud[dooo_fac_stud$year == '2016']$date)
length(dooo_fac_stud[dooo_fac_stud$year == '2016',]$date)
length(dooo_fac_stud[dooo_fac_stud$year_month == '2016-12',]$date)
length(dooo_fac_stud[dooo_fac_stud$year_month == '2015-12',]$date)
length(dooo_fac_stud[dooo_fac_stud$year_month == '2015-11',]$date)
length(dooo_fac_stud[dooo_fac_stud$year_month == '2015-10',]$date)
650+15+47
length(dooo_fac_stud[dooo_fac_stud$year_month == '2015-9',]$date)
length(dooo_fac_stud[dooo_fac_stud$year_month == '2015-09',]$date)
length(dooo_fac_stud[dooo_fac_stud$year_month == '2015-08',]$date)
ida <- read.csv('~/ida/ida.csv')
plot(ida$f~ida$sft)
plot(ida$b~ida$sft)
plot(ida$m~ida$sft)
plot(ida$h~ida$sft)
plot(ida$t~ida$sft)
plot(ida$l~ida$sft)
plot(ida$sf~ida$sft)
plot(ida$rf~ida$sft)
cor(ida$sf, ida$f)
cor(ida$sf, ida$b)
cor(ida$sf, ida$m)
cor(ida$sf, ida$h)
cor(ida$sf, ida$t)
cor(ida$sf, ida$l)
idamod <- lm(ida$sf ~ ida$f)
summary(idamod)
idamulti <- lm(ida$sf ~ ida$f + ida$b + ida$m + ida$h + ida$t + ida$l)
summary(idamulti)
fit <- aov(ida$f ~ ida$sft)
summary(fit)
fit <- aov(ida$b ~ ida$sft)
summary(fit)
tuk <- TukeyHSD(fit)
tuk
plot(tuk)
fit <- aov(ida$m ~ ida$sft)
summary(fit)
tuk <- TukeyHSD(fit)
tuk
plot(tuk)
fit <- aov(ida$h ~ ida$sft)
summary(fit)
fit <- aov(ida$t ~ ida$sft)
summary(fit)
tuk <- TukeyHSD(fit)
tuk
plot(tuk)
fit <- aov(ida$l ~ ida$sft)
summary(fit)
fit <- aov(ida$sf ~ ida$sft)
summary(fit)
tuk <- TukeyHSD(fit)
tuk
plot(tuk)
fit <- aov(ida$rf ~ ida$sft)
summary(fit)
tuk <- TukeyHSD(fit)
tuk
plot(tuk)
fit <- aov(ida$m*ida$t ~ ida$sft)
summary(fit)
tuk <- TukeyHSD(fit)
tuk
plot(tuk)
fit <- aov(ida$m*ida$h ~ ida$sft)
summary(fit)
fit <- aov(ida$m*ida$h*ida$t ~ ida$sft)
summary(fit)
fit <- aov(ida$m*ida$b ~ ida$sft)
summary(fit)
tuk <- TukeyHSD(fit)
tuk
plot(tuk)
fit <- aov(ida$f*ida$b ~ ida$sft)
summary(fit)
fit <- aov(ida$f*ida$m ~ ida$sft)
summary(fit)
fit <- aov(ida$f*ida$h ~ ida$sft)
summary(fit)
fit <- aov(ida$f*ida$t ~ ida$sft)
summary(fit)
fit <- aov(ida$f*ida$l ~ ida$sft)
summary(fit)
fit <- aov(ida$f-ida$l ~ ida$sft)
summary(fit)
fit <- aov(ida$f-ida$t ~ ida$sft)
summary(fit)
tuk <- TukeyHSD(fit)
tuk
plot(tuk)
fit <- aov(ida$f-ida$h ~ ida$sft)
summary(fit)
fit <- aov(ida$f-ida$m ~ ida$sft)
summary(fit)
tuk <- TukeyHSD(fit)
tuk
plot(tuk)
fit <- aov(ida$f-ida$b ~ ida$sft)
summary(fit)
fit <- aov(ida$t-ida$b ~ ida$sft)
summary(fit)
tuk <- TukeyHSD(fit)
tuk
plot(tuk)
fit <- aov(ida$b-ida$t ~ ida$sft)
summary(fit)
tuk <- TukeyHSD(fit)
tuk
plot(tuk)
fit <- aov(ida$m-ida$t ~ ida$sft)
summary(fit)
fit <- aov(ida$l-ida$t ~ ida$sft)
summary(fit)
fit <- aov(ida$sf-ida$t ~ ida$sft)
summary(fit)
tuk <- TukeyHSD(fit)
tuk
plot(tuk)
fit <- aov(ida$sf/ida$t ~ ida$sft)
summary(fit)
fit <- aov(ida$sf ~ ida$sft)
summary(fit)
tuk <- TukeyHSD(fit)
tuk
plot(tuk)
fit <- aov(ida$f ~ ida$sft)
summary(fit)
tuk <- TukeyHSD(fit)
tuk
plot(tuk)
ida <- read.csv('~/ida/ida.csv')
plot(ida$f~ida$sft)
plot(ida$b~ida$sft)
plot(ida$m~ida$sft)
plot(ida$h~ida$sft)
plot(ida$t~ida$sft)
plot(ida$l~ida$sft)
plot(ida$sf~ida$sft)
plot(ida$rf~ida$sft)
cor(ida$sf, ida$f)
cor(ida$sf, ida$b)
cor(ida$sf, ida$m)
cor(ida$sf, ida$h)
cor(ida$sf, ida$t)
cor(ida$sf, ida$l)
install.packages('tidytext')
library(dplyr)
library(tidytext)
library(stringr)
library(janeaustenr)
original_books <- austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
ignore_case = TRUE)))) %>%
ungroup()
original_books
tidy_books <- original_books %>%
unnest_tokens(word, text)
library(dplyr)
library(tidytext)
library(stringr)
library(janeaustenr)
original_books <- austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
ignore_case = TRUE)))) %>%
ungroup()
tidy_books <- original_books %>%
unnest_tokens(word, text)
View(tidy_books)
jane_so_stop <- tidy_books %>%
anti_join(stop_words)
jane_no_stop <- tidy_books %>%
anti_join(stop_words)
jane_no_stop %>%
count(word, sort=TRUE)
View(jane_no_stop)
jane_no_stop %>%
count(word, sort=TRUE) %>%
filter(n > 600) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_bar(stat = 'identity') +
xlab(NULL) +
coord_flip()
library(ggplot2)
jane_no_stop %>%
count(word, sort=TRUE) %>%
filter(n > 600) %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n)) +
geom_bar(stat = 'identity') +
xlab(NULL) +
coord_flip()
install.packages(gutenbergr)
install.packages('gutenbergr')
library(gutenbergr)
hgwells <- gutenberg_download(c(35, 36, 5230, 159))
tidy_hgwells <- hgwells %>%
unnest_tokens((word, text)) %>%
anti_join(stop_words)
tidy_hgwells <- hgwells %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
hgwells <- gutenberg_download(c(35, 36, 5230, 159))
tidy_hgwells %>%
count(word, sort = TRUE)
bronte <- gutenberg_download(c(1260, 768, 969, 9182, 766))
tidy_bronte <- bronte %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
tidy_bronte %>%
count(word, sort = TRUE)
tidy_both <- bind_rows(
mutate(tidy_bronte, author = "Brontë Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"))
austen_percent <- jane_no_stop %>%
mutate(word = str_extract(word, "[a-z]+")) %>%
count(word) %>%
transmute(word, austen = n / sum(n))
frequency <- tidy_both %>%
mutate(word = str_extract(word, "[a-z]+")) %>%
count(author, word) %>%
mutate(other = n / sum(n)) %>%
left_join(austen_percent) %>%
ungroup()
library(scales)
View(frequency)
ggplot(frequency, aes(x = other, y = austen, color = abs(austen - other))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Jane Austen", x = NULL)
View(frequency)
cor.test(data = frequency[frequency$author == "Brontë Sisters",],
~ other + austen)
cor.test(data = frequency[frequency$author == "H.G. Wells",],
~ other + austen)
nrcjoy <- get_sentiments("nrc") %>%
filter(sentiment == "joy")
View(nrcjoy)
tidy_books %>%
filter(book == "Emma") %>%
inner_join(nrcjoy) %>%
count(word, sort = TRUE)
jane_no_stop %>%
filter(book == "Emma") %>%
inner_join(nrcjoy) %>%
count(word, sort = TRUE)
tidy_books %>%
filter(book == "Emma") %>%
inner_join(nrcjoy) %>%
count(word, sort = TRUE)
library(tidyr)
janeaustensentiment <- tidy_books %>%
inner_join(get_sentiments("bing")) %>%
count(book, index = linenumber %/% 100, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
View(janeaustensentiment)
?count
ggplot(janeaustensentiment, aes(index, sentiment, fill = book)) +
geom_bar(alpha = 0.8, stat = "identity", show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x")
?spread
?summarize
library(dplyr)
library(tidytext)
library(stringr)
library(ggplot2)
library(tidyr)
library(tibble)
library(scales)
library(reshape2)
library(wordcloud)
library(lubridate)
library(tm)
library(topicmodels)
setwd("C:/Users/jstommel-admin/repos/DoOO")
dooo_texts <- read.csv('dooo_all_data_Jan6_clean.csv')
dooo_tidy <- as_tibble(dooo_texts) %>%
transmute(author,
title,
url,
date = as.Date(as.character(strptime(dooo_texts$date, '%m/%d/%Y'))),
text = as.character(text)) %>%
unnest_tokens(word, text)
dooo_no_stop <- dooo_tidy %>%
anti_join(stop_words)
words_by_time <- dooo_tidy %>%
mutate(time_floor = floor_date(date, unit = "1 month")) %>%
count(time_floor, word) %>%
ungroup() %>%
group_by(time_floor) %>%
mutate(time_total = sum(n)) %>%
group_by(word) %>%
mutate(word_total = sum(n)) %>%
ungroup() %>%
rename(count = n) %>%
filter(word_total > 30)
words_by_time_grouped <- dooo_tidy %>%
mutate(time_floor = floor_date(date, unit = "1 month"),
umw = (author %in% umw_authors)) %>%
count(time_floor, umw, word) %>%
ungroup() %>%
group_by(umw, time_floor) %>%
mutate(time_total = sum(n)) %>%
group_by(word) %>%
mutate(word_total = sum(n)) %>%
ungroup() %>%
rename(count = n) %>%
filter(word_total > 30)
words_by_time %>%
filter(word %in% c('middlebury', 'umw', 'washington', 'ou', 'davidson', 'oklahoma', 'emory')) %>%
ggplot(aes(time_floor, count/time_total, color = word)) +
geom_line(alpha = 0.8, size = 1.3) +
labs(x = NULL,
y = 'Word frequency')
umw_authors <- c('Jim Groom',
'Tim Owens',
'Martha Burtis',
'Jesse Stommel',
'Kris Shaffer',
'Parrish Waters',
'Debra Schleef',
'Lee Skallerup Bessette',
'Richard V. Hurley',
'Zach Whalen',
'Gardner Campbell',
'Laura Moyer',
'Brynn Boyer')
words_by_time <- dooo_tidy %>%
mutate(time_floor = floor_date(date, unit = "1 month")) %>%
count(time_floor, word) %>%
ungroup() %>%
group_by(time_floor) %>%
mutate(time_total = sum(n)) %>%
group_by(word) %>%
mutate(word_total = sum(n)) %>%
ungroup() %>%
rename(count = n) %>%
filter(word_total > 30)
words_by_time_grouped <- dooo_tidy %>%
mutate(time_floor = floor_date(date, unit = "1 month"),
umw = (author %in% umw_authors)) %>%
count(time_floor, umw, word) %>%
ungroup() %>%
group_by(umw, time_floor) %>%
mutate(time_total = sum(n)) %>%
group_by(word) %>%
mutate(word_total = sum(n)) %>%
ungroup() %>%
rename(count = n) %>%
filter(word_total > 30)
words_by_time %>%
filter(word %in% c('reclaim', 'create')) %>%
ggplot(aes(time_floor, count/time_total, color = word)) +
geom_line(alpha = 0.8, size = 1.3) +
labs(x = NULL,
y = 'Word frequency')
words_by_time %>%
filter(word %in% c('middlebury', 'umw', 'washington', 'ou', 'davidson', 'oklahoma', 'emory')) %>%
ggplot(aes(time_floor, count/time_total, color = word)) +
geom_line(alpha = 0.8, size = 1.3) +
labs(x = NULL,
y = 'Word frequency')
words_by_time %>%
filter(word %in% c('middcreate', 'middlebury', 'umw', 'washington', 'ou', 'davidson', 'oklahoma', 'emory')) %>%
ggplot(aes(time_floor, count/time_total, color = word)) +
geom_line(alpha = 0.8, size = 1.3) +
labs(x = NULL,
y = 'Word frequency')
words_by_time %>%
filter(word %in% c('groom', 'middlebury', 'umw', 'washington', 'ou', 'davidson', 'oklahoma', 'emory')) %>%
ggplot(aes(time_floor, count/time_total, color = word)) +
geom_line(alpha = 0.8, size = 1.3) +
labs(x = NULL,
y = 'Word frequency')
words_by_time %>%
filter(word %in% c('umw', 'washington', 'ou', 'davidson', 'oklahoma', 'emory')) %>%
ggplot(aes(time_floor, count/time_total, color = word)) +
geom_line(alpha = 0.8, size = 1.3) +
labs(x = NULL,
y = 'Word frequency')
dooo_tidy[dooo_tidy$word=='middlebury',]
View(words_by_time)
words_by_time_reclaimers <- dooo_tidy %>%
filter(author %in% c('Jim Groom', 'Tim Owens')) %>%
mutate(time_floor = floor_date(date, unit = "1 month")) %>%
count(time_floor, word) %>%
ungroup() %>%
group_by(time_floor) %>%
mutate(time_total = sum(n)) %>%
group_by(word) %>%
mutate(word_total = sum(n)) %>%
ungroup() %>%
rename(count = n) %>%
filter(word_total > 30)
words_by_time_reclaimers %>%
filter(word %in% c('umw', 'washington', 'ou', 'davidson', 'oklahoma', 'emory')) %>%
ggplot(aes(time_floor, count/time_total, color = word)) +
geom_line(alpha = 0.8, size = 1.3) +
labs(x = NULL,
y = 'Word frequency')
words_by_time_reclaimers %>%
filter(word %in% c('reclaim', 'create')) %>%
ggplot(aes(time_floor, count/time_total, color = word)) +
geom_line(alpha = 0.8, size = 1.3) +
labs(x = NULL,
y = 'Word frequency')
words_by_time_no_reclaimers <- dooo_tidy %>%
filter(!author %in% c('Jim Groom', 'Tim Owens')) %>%
mutate(time_floor = floor_date(date, unit = "1 month")) %>%
count(time_floor, word) %>%
ungroup() %>%
group_by(time_floor) %>%
mutate(time_total = sum(n)) %>%
group_by(word) %>%
mutate(word_total = sum(n)) %>%
ungroup() %>%
rename(count = n) %>%
filter(word_total > 30)
words_by_time_no_reclaimers %>%
filter(word %in% c('reclaim', 'create')) %>%
ggplot(aes(time_floor, count/time_total, color = word)) +
geom_line(alpha = 0.8, size = 1.3) +
labs(x = NULL,
y = 'Word frequency')
words_by_time_reclaimers %>%
filter(word %in% c('reclaim', 'create')) %>%
ggplot(aes(time_floor, count/time_total, color = word)) +
geom_line(alpha = 0.8, size = 1.3) +
labs(x = NULL,
y = 'Word frequency')
source('C:/Users/jstommel-admin/repos/DoOO/dooo_tidy_analysis.R')
setwd("C:/Users/jstommel-admin/repos/doooCorpus")
